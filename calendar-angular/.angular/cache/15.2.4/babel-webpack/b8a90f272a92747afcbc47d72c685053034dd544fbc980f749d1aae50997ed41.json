{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/calendar.service\";\nexport class CalendarResolver {\n  constructor(service) {\n    this.service = service;\n  }\n  resolve(route, state) {\n    if (route.params && route.params['id']) {\n      return this.service.getCalendarById(route.params['id']);\n    }\n    return of({\n      id: '',\n      title: '',\n      judge: '',\n      date: '',\n      start: '',\n      end: ''\n    });\n  }\n}\nCalendarResolver.ɵfac = function CalendarResolver_Factory(t) {\n  return new (t || CalendarResolver)(i0.ɵɵinject(i1.CalendarService));\n};\nCalendarResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalendarResolver,\n  factory: CalendarResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAOA,SAAqBA,EAAE,QAAQ,MAAM;;;AAMrC,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,OAAwB;IAAxB,YAAO,GAAPA,OAAO;EAAmB;EAE9CC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAGD,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,EAAC;MACpC,OAAO,IAAI,CAACJ,OAAO,CAACK,eAAe,CAACH,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC;;IAEzD,OAAOP,EAAE,CAAC;MACRS,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;KACN,CAAC;EACJ;;AAhBWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAc,SAAhBd,gBAAgB;EAAAe,YAFf;AAAM","names":["of","CalendarResolver","constructor","service","resolve","route","state","params","getCalendarById","id","title","judge","date","start","end","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\eujuu\\OneDrive\\Documentos\\calendar-lawyer\\calendar-angular\\src\\app\\guards\\calendar.resolver.ts"],"sourcesContent":["import { CalendarService } from './../services/calendar.service';\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Calendar } from '../model/calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarResolver implements Resolve<Calendar> {\n\n  constructor(private service: CalendarService){}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Calendar> {\n    if(route.params && route.params['id']){\n      return this.service.getCalendarById(route.params['id']);\n    }\n    return of({\n      id: '',\n      title: '',\n      judge: '',\n      date: '',\n      start: '',\n      end: '',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}